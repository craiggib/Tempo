@model TEMPO.WebApp.Models.Timesheet.Timesheet

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Timesheet</h2>
<style>
    .time-entry {
        width: 55px;
        /*text-align: left;*/
        text-align: center;
    }

    .time-entry-column {
        /*width: 65px;*/
        text-align: center;
        /*padding-left: 5px;*/
    }

    .time-entry-column-worktype {
        width: 150px;
        padding-right: 5px;
    }

    .time-entry-column-project {
        width: 300px;
        padding-right: 5px;
    }

    .time-entry-add {
        padding-top: 10px;
    }

    .time-entry-delete {
        padding-left: 5px;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .modal-content textarea.form-control {
        max-width: 100%;
    }
</style>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "timeSheetForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        <div class="row">
            <div class="col-md-9">
                @Html.HiddenFor(i => i.PeriodEnding)
                @Html.HiddenFor(i => i.TimesheetId)


                <div class="row">
                    <div class="col-md-6">

                        <div>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.DisplayNameFor(model => model.EmployeeName)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => model.EmployeeName)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.StatusName)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => model.StatusName)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => model.PeriodEnding)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => model.PeriodEnding)
                                </dd>
                            </dl>
                        </div>

                    </div>
                    <div class="col-md-6">
                        @if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
                        {
                            <div class="alert alert-success">
                                @ViewBag.SuccessMessage
                            </div>
                        }
                    </div>
                </div>

                <!-- TimeEntries -->
                <table id="timeEntryTable">
                    <thead>
                        <tr>
                            <th class="time-entry-column-project">Project</th>
                            <th class="time-entry-column-worktype">Type</th>
                            <th class="time-entry-column">Sun</th>
                            <th class="time-entry-column">Mon</th>
                            <th class="time-entry-column">Tue</th>
                            <th class="time-entry-column">Wed</th>
                            <th class="time-entry-column">Thu</th>
                            <th class="time-entry-column">Fri</th>
                            <th class="time-entry-column">Sat</th>
                        </tr>

                    </thead>
                    <tbody>

                        @foreach (var timeEntry in Model.TimeEntries)
                        {
                            @Html.Partial("_TimeEntry", timeEntry)
                        }

                    </tbody>
                    <tfoot>
                        <tr>
                            <td class="time-entry-add">
                                <button type="button" value="Add" id="addTimeEntry" class="btn btn-default btn-sm btn-primary">Add</button>
                            </td>
                        </tr>
                    </tfoot>
                </table>
               
            </div>

            <div class="col-md-3">
                <div class="jumbotron">
                    <h1 id="weekly-total">@Html.DisplayFor(t => t.WeeklyTotal)</h1>
                    <p>Weekly Hours</p>
                    <input type="submit" value="Save" class="btn btn-sm btn-primary" />
                    <button type="button" value="Submit" class="btn btn-sm btn-success" id="submitTimeSheet">Submit</button>
                    @Html.HiddenFor(i => i.SubmitForApproval)                    
                    @Html.HiddenFor(i => i.Notes)
                    
                </div>

            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript" src="/scripts/bootbox.min.js"></script>
    <script>
        $('#addTimeEntry').click(function () {
            addTimeEntryRow();
        });

        function addTimeEntryRow() {
            var url = '@Url.Action("AddTimeEntry", "Timesheet")';
            var tableBody = $('#timeEntryTable tbody');
            $.get(url, function (response) {
                //console.log(response)
                tableBody.append(response);
                bindDeleteClick();

                $('form').data('validator', null);
                $.validator.unobtrusive.parse($('form'));
            });
        }

        function bindDeleteClick() {
            $(".deleteTimeEntry").off();
            $(".deleteTimeEntry").click(function () {

                var entryId = $(this).data("timeentryid");
                var url = '@Url.Action("DeleteTimeEntry", "Timesheet")';
                var rowToRemove = $(this).closest('.timeEntry-row');

                bootbox.confirm("Are you sure?", function (result) {
                    if (result) {
                        $.post(url, { entryId: entryId }, function (response) {
                            rowToRemove.remove();
                        });
                    }
                });
            });
        }

        bindDeleteClick();

        function sumWeeklyHours() {
            var total = 0;
            $(".time-entry").each(function () {
                var dailyTotal = parseInt($(this).val());
                total += isNaN(dailyTotal) ? 0 : dailyTotal;
            })
            $("#weekly-total").text(total);
        }

        $(".time-entry").keyup(sumWeeklyHours);

        function addFirstRow() {
            var rowCount = $('#timeEntryTable tr').length;
            if (rowCount <= 2) {
                addTimeEntryRow();
            }
        }
        addFirstRow();

        $("#submitTimeSheet").click(function () {

            bootbox.prompt({
                title: "Submit Your Timesheet",
                placeholder: 'Notes (optional)',
                inputType: 'textarea',
                buttons: {
                    confirm: {
                        label: 'Submit'
                    }
                },
                callback: function (result) {
                    if (result != null) {
                        $("#Notes").val(result);
                        $("#SubmitForApproval").val("True");                        
                        $("#timeSheetForm").submit();                        
                    }
                }
            });
        });



    </script>
}

@model TEMPO.WebApp.Models.Client.Client

@{
    ViewBag.Title = "Edit Client";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .total-billing {
        font-size: 40px;
    }
    .projectlist{
        font-size:85%;
    }
    h2 {
        margin-bottom:20px;
    }
    .projectlist-row{
        margin-top:20px;
    }
</style>

<h2>Client Details</h2>
<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
                {
                    <div class="alert alert-success">
                        @ViewBag.SuccessMessage
                    </div>
                }

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ClientId)

                <div class="form-group">
                    @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="Save" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>
        }
    </div>

    @if (Model.ProjectList != null && Model.ProjectList.Count > 0)
    {
        <div class="col-md-3 text-center">

            <div class="panel panel-default">
                <div class="panel-heading"><i class="fa fa-money"></i> Contracted Amount</div>
                <div class="panel-body form-horizontal metric">
                    <div class="total-billing text-success">@(string.Format("{0:c0}", Model.ProjectList.Sum(i => i.ContractedAmount)))</div>                   
                </div>
            </div>

            @*<div>
                <span class="text-muted">
                    <i class="fa fa-money"></i> Total Billing
                </span>
                <div class="total-billing text-success">@(string.Format("{0:c}", Model.ProjectList.Sum(i => i.InternalAmount)))</div>
            </div>*@
        </div>
        <div class="col-md-3 text-center">

            <div class="panel panel-default">
                <div class="panel-heading"><i class="fa fa-clock-o"></i> Total Hours</div>
                <div class="panel-body form-horizontal metric">
                    <div class="total-billing text-muted">@(string.Format("{0:n0}", (Model.ProjectList.Sum(i => i.TotalHours))))</div>
                    @*<small><span class="text-muted">@(string.Format("{0:c0}", Model.ProjectList.Sum(i => i.InternalAmount))) (Internal Fees)</span></small>*@
                </div>
            </div>

            @*<div>
                <span class="text-muted"><i class="fa fa-clock-o"></i> Total Hours</span>
                <div class="total-billing text-info">@(Model.ProjectList.Sum(i => i.TotalHours))</div>
            </div>*@
        </div>
    }
</div>

<div class="row projectlist-row">
    <div class="col-md-8">

        <div class="row">
            <div class="col-md-12 text-right">
                <div class="btn-group" role="group" aria-label="...">
                    <a class="btn btn-default btn-sm @(Request.QueryString["sort"] == "recent" || string.IsNullOrEmpty(Request.QueryString["sort"]) ? "active" : "")" href="@Url.Action("Edit", "Client", new { sort = "recent" })">Recent</a>                    
                    <a class="btn btn-default btn-sm @(Request.QueryString["sort"] == "hours" ? "active" : "")" href="@Url.Action("Edit", "Client", new { sort = "hours" })">Hours</a>
                </div>
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Project Name</th>
                    <th>Type</th>
                    <th>Last Hours</th>
                    <th>Hours</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ProjectList)
                {
                    <tr>
                        <td>
                            <a href="@Url.Action("Edit", "Project", new {id= item.ProjectId})">@Html.DisplayFor(i => item.ProjectName)</a>
                            <div><small>@Html.DisplayFor(i => item.Description)</small></div>
                        </td>
                        <td class="projectlist">
                            @Html.DisplayFor(i => item.ProjectType)
                        </td>
                        <td class="projectlist">
                            @Html.DisplayFor(modelItem => item.LastHoursLogged)
                        </td>
                        <td class="projectlist">
                            @Html.DisplayFor(i => item.TotalHours)
                        </td>
                        <td class="projectlist">
                            @Html.DisplayFor(i => item.ContractedAmount)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

     
    </div>
    <div class="col-md-4">
        @Html.Partial("Project/_CreateProject", new TEMPO.WebApp.Models.Project.Project { ClientId = Model.ClientId, JobYears = Model.JobYears, JobYearId = Model.CurrentJobYearId ?? 0, ProjectTypes = Model.ProjectTypes })


    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}
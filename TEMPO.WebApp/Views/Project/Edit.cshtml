@model TEMPO.WebApp.Models.Project.Project

@{
    ViewBag.Title = "Project Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Project Details</h2>
<style>
    .total-billing {
        font-size: 40px;
    }

    .chart-container {
        width: 400px;
        height: 120px;
    }

    .timesummary-row {
        margin-top: 30px;
    }
</style>
<link href="~/Content/bootstrap-datepicker.css" rel="stylesheet" />
<div class="row">
    <div class="col-md-5">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.ClientId)
                @Html.HiddenFor(m => m.ProjectId)

                <div class="form-group text-left">
                    @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7 form-control-static">
                        <a href="@Url.Action("Edit", "Client", new { id = Model.ClientId })">@Html.DisplayFor(model => model.CustomerName, new { @class = "form-control-static" })</a>
                    </div>
                </div>
                <div class="form-group text-left">
                    @Html.LabelFor(model => model.JobYearId, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7">
                        @Html.DropDownListFor(model => model.JobYearId, new SelectList(Model.JobYears, "JobYearId", "Year"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectNumber, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.ProjectNumber, new { htmlAttributes = new { @class = "form-control" } })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReferenceJobNumber, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.ReferenceJobNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Optional" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectTypeId, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7">
                        @Html.DropDownListFor(model => model.ProjectTypeId, new SelectList(Model.ProjectTypes, "ProjectTypeId", "Description"), new { @class = "form-control" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", placeholder = "Optional" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContractedAmount, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7">
                        <div class="input-group">
                            <span class="input-group-addon">$</span>
                            @Html.EditorFor(model => model.ContractedAmount, new { htmlAttributes = new { @class = "form-control", placeholder = "Optional" } })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DrawingCount, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.DrawingCount, new { htmlAttributes = new { @class = "form-control", placeholder = "Optional" } })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "col-md-5 form-control-static" })
                    <div class="col-md-7">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "" } })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-5 col-md-7">
                        <input type="submit" value="Save" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-7">
        @Html.Partial("_FixedPriceMetrics", Model)

        <div class="chart-container">
            <div>
                <canvas id="timeChart"></canvas>
            </div>
        </div>
    </div>
</div>

<hr />
<div class="row timesummary-row">
    <div class="col-md-9">
        <form action="@Url.Action("Edit")" method="get">
            <div class="row">
                <div class="col-md-2 col-md-offset-1">
                    <strong>Time Entry Filter</strong>
                </div>
                <div class="col-md-5 text-right">
                    <div class="form-inline">
                        <div class="form-group">

                            <div class="input-daterange input-group" id="datepicker">
                                <input type="text" value="@Request.QueryString["start"]" class="input-sm form-control" name="start" />
                                <span class="input-group-addon">to</span>
                                <input type="text" value="@Request.QueryString["end"]" class="input-sm form-control" name="end" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-1 text-right">
                    <button class="btn btn-primary btn-sm" type="submit">Search</button>
                </div>

            </div>
        </form>
        <br />
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Employee Name
                    </th>
                    <th>
                        Work Type
                    </th>
                    <th>
                        Hours
                    </th>
                    <th>
                        Internal Fees
                    </th>
                    <th>
                        Week Ending
                    </th>
                </tr>
            </thead>
            <tbody>


                @foreach (var item in Model.TimeEntrySummaries)
                {
                    @Html.Partial("Timesheet/_TimeEntrySummary", item)
                }
            </tbody>

        </table>

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/Chart.min.js"></script>

    <script>

        $(".input-daterange").datepicker({
            autoclose: true
        });

       

        $(function () {
            $.post('/Project/GetProjectTimebreakdown', { projectId: @Model.ProjectId}, function (allData) {               
                var ctx =  $("#timeChart");
                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: allData.WorkTypes, //["Drafting", "Checking", "Administration"],
                        datasets: [{

                            data: allData.Hours, //[12, 19, 3],
                            backgroundColor: [
                                'rgba(92,184,92, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                            ],
                            borderColor: [
                                'rgba(92,184,92,1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        },
                        legend: {
                            display: false
                        },
                        title: {
                            display: true,
                            text: 'Work Type (Hours)'
                        }
                    }
                });
            });
        });


       
    </script>
}

